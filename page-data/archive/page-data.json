{"componentChunkName":"component---src-pages-archive-js","path":"/archive/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"date":"2024-06-01","title":"ROS2 Turtlesim-Catch_Them_All Simulation","tech":["Python","C++","ROS2"],"github":"https://github.com/LateefAkinola/ROS2-Turtlesim-Catch_Them_All-Project","external":"","company":""},"html":"<p>In this project, a simulation of the popular ROS2 Turtlesim executable was developed. A master turtle was programmed to use a P controller to catch all other turtles that appear on the screen. The implementation involved utilizing three nodes and creating three custom interfaces, consisting of two messages and one service.</p>"}},{"node":{"frontmatter":{"date":"2024-03-01","title":"Robot Arm Manipulator with ROS2","tech":["Python","C++","ROS2","Gazebo/Rviz/Moveit2"],"github":"https://github.com/LateefAkinola/Robot-Arm-Manipulator-with-ROS-2","external":"","company":""},"html":"<p>In this project, modelled parts of a 6 DOF robot arm in SolidWorks were assembled using ROS framework and simulated in Gazebo. Moveit2 stack was utilized for simulating the robot arm's manipulation.</p>"}},{"node":{"frontmatter":{"date":"2022-10-16","title":"A* Search Graph","tech":["Jupyter Notebook","Python","CoppeliaSim"],"github":"https://github.com/LateefAkinola/Robot-Motion-Planning_A-Star-Graph-Search","external":"","company":""},"html":"<p>A program that takes two files as input, \"nodes.csv and edges.csv\", implements A* search to find a minimum-cost path through an undirected graph, and produces a single file as output, \"path.csv\". The CSV Motion Planning <a href=\"https://www.kilobotics.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Kilobot</a> CoppeliaSim scene will be used to visualize the graph and the solution path found by the written program.</p>"}},{"node":{"frontmatter":{"date":"2022-09-22","title":"IK of a UR5 Robot","tech":["Python","CoppeliaSim","Jupyter Notebook"],"github":"https://github.com/LateefAkinola/Inverse-Kinematics-of-a-UR5-Robot","external":"https://github.com/LateefAkinola/Inverse-Kinematics-of-a-UR5-Robot","company":""},"html":"<p>The Inverse Kinematics (IK) function implements the Newton-Raphson process and generates the joint's report for each iteration. The report includes the iteration number, the joint vector, the end-effector position and orienrepresenting the deviation between the desired and current end-effector poses, and the magnitudes of the angular and linear errors.</p>"}},{"node":{"frontmatter":{"date":"2022-09-12","title":"Autonomous Driving: Car Detection Application using YOLO algorithm","tech":["Computer Vision","Machine Learning","CNN","Python","Tensorflow"],"github":"https://github.com/LateefAkinola/Autonomous-Driving-Car-Detection-using-YOLO-algorithm","external":"","company":""},"html":"<p>As part of a self-driving car project, the focus is on developing a robust car detection system.</p>"}}]}},"pageContext":{}},"staticQueryHashes":["3115057458"]}